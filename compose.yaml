services:

  monitor:
      restart: on-failure
      build: ./monitor
      hostname: monitor
      ports:
        - '82:8080'
      networks:
        internal:
          ipv4_address: 172.16.230.8

  mongo:
    image: mongo
    ports:
      - '2717:27017'
    networks:
      internal:
        ipv4_address: 172.16.230.9
    volumes:
      - db_auth:/data/db
      - db_auth:/data/configdb
  
  mongo_event:
    image: mongo
    ports:
      - '2718:27017'
    networks:
      internal:
        ipv4_address: 172.16.230.16
    volumes:
      - db_events:/data/db
      - db_events:/data/configdb

  
  
  event:
    restart: on-failure
    build: ./event
    hostname: event1
    ports:
      - '82:3007'
    networks:
      internal:
        ipv4_address: 172.16.230.15

  auth1:
    restart: on-failure
    build: ./auth
    hostname: auth1
    ports:
      - '81:3006'
    networks:
      internal:
        ipv4_address: 172.16.230.10
  #auth2:
   # restart: on-failure
    #build: ./auth
    #hostname: auth2
    #ports:
    #  - '82:5000'
  nginx:
    build: ./nginx
    ports:
     - '80:80'
    environment:
      - AUTH_IP=172.16.230.10:3006
    networks:
      internal:
        ipv4_address: 172.16.230.11
    depends_on:
    - auth1
    #- auth2


  mongodb:
    image: mongo
    container_name: mongodb
    volumes:
      - ./db_tickets:/data/db
      - ./db_tickets:/data/configdb
    networks:
      internal:
        ipv4_address: 172.16.230.12
    ports:
      - '2716:27017'

  payments:
    image: container_pagamento
    build: ./payments
    hostname: payments
    networks:
      internal:
        ipv4_address: 172.16.230.13

    ports:
      - '4242:4242'

networks:
  internal:
    ipam:
      driver: default
      config:
        - subnet: "172.16.230.0/24"

volumes:
  db_auth:
  db_tickets:
  db_events:

  

